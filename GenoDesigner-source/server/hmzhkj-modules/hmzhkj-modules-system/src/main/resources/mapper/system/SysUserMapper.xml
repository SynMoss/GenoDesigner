<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hmzhkj.system.mapper.SysUserMapper">

    <resultMap type="com.hmzhkj.system.domain.SysUser" id="SysUserResult">
        <id     property="userId"       column="user_id"      />
        <result property="deptId"       column="dept_id"      />
        <result property="userName"     column="user_name"    />
        <result property="nickName"     column="nick_name"    />
        <result property="email"        column="email"        />
        <result property="phonenumber"  column="phonenumber"  />
        <result property="sex"          column="sex"          />
        <result property="avatar"       column="avatar"       />
        <result property="password"     column="password"     />
        <result property="status"       column="status"       />
        <result property="delFlag"      column="del_flag"     />
        <result property="loginIp"      column="login_ip"     />
        <result property="loginDate"    column="login_date"   />
        <result property="createBy"     column="create_by"    />
        <result property="createTime"   column="create_time"  />
        <result property="updateBy"     column="update_by"    />
        <result property="updateTime"   column="update_time"  />
        <result property="remark"       column="remark"       />
        <result property="isAudit"       column="is_audit"       />
		<result property="logonMode"       column="logon_mode"       />
        <association property="dept"    column="dept_id" javaType="com.hmzhkj.system.domain.SysDept" resultMap="deptResult" />
        <collection  property="roles"   javaType="java.util.List"           resultMap="RoleResult" />
    </resultMap>
	
    <resultMap id="deptResult" type="com.hmzhkj.system.domain.SysDept">
        <id     property="deptId"    column="dept_id"     />
        <result property="parentId"  column="parent_id"   />
        <result property="deptName"  column="dept_name"   />
        <result property="ancestors" column="ancestors"   />
        <result property="orderNum"  column="order_num"   />
        <result property="leader"    column="leader"      />
        <result property="status"    column="dept_status" />
    </resultMap>
	
    <resultMap id="RoleResult" type="com.hmzhkj.system.domain.SysRole">
        <id     property="roleId"       column="role_id"        />
        <result property="roleName"     column="role_name"      />
        <result property="roleKey"      column="role_key"       />
        <result property="roleSort"     column="role_sort"      />
        <result property="dataScope"     column="data_scope"    />
        <result property="status"       column="role_status"    />
    </resultMap>
	
	<sql id="selectUserVo">
        select u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.avatar, u.phonenumber, u.password, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, u.is_audit,
        d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.status as dept_status,
        r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status
        from sys_user u
		    left join sys_dept d on u.dept_id = d.dept_id
		    left join sys_user_role ur on u.user_id = ur.user_id
		    left join sys_role r on r.role_id = ur.role_id
    </sql>
    
    <select id="selectUserList" resultMap="SysUserResult">
		select u.user_id, u.dept_id, u.nick_name, u.user_name, u.email, u.avatar, u.phonenumber, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, u.is_audit, d.dept_name, d.leader from sys_user u
		left join sys_dept d on u.dept_id = d.dept_id
		where u.del_flag = '0'
		<if test="isAudit != null and isAudit != ''">
			AND u.is_audit = #{isAudit}
		</if>
		<if test="userId != null and userId != 0">
			AND u.user_id = #{userId}
		</if>
		<if test="userName != null and userName != ''">
			AND u.user_name like concat('%', replace(#{userName}::text, '_', '\_'), '%')
		</if>
		<if test="status != null and status != ''">
			AND u.status = #{status}
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>
		<if test="email != null and email != ''">
			AND u.email like concat('%', replace(#{email}::text, '_', '\_'), '%')
		</if>
		<if test="params.beginTime != null and params.beginTime != ''">
			AND to_date(cast(u.create_time as TEXT),'YYYY-MM-DD HH24:MI:SS') <![CDATA[ >= ]]> to_date(cast(#{params.beginTime} as TEXT),'YYYY-MM-DD HH24:MI:SS')
		</if>
		<if test="params.endTime != null and params.endTime != ''">
			AND to_date(cast(u.create_time as TEXT),'YYYY-MM-DD HH24:MI:SS') <![CDATA[ <= ]]> to_date(cast(#{params.endTime} as TEXT),'YYYY-MM-DD HH24:MI:SS')
		</if>
		<if test="deptId != null and deptId != 0">
			AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE #{deptId} =any (string_to_array(ancestors,',')) ))
		</if>
		order by u.create_time desc, u.update_time desc

		${params.dataScope}
	</select>

	<select id="selectAuditUserList" resultMap="SysUserResult">
		select u.user_id, u.dept_id, u.nick_name, u.user_name, u.email, u.avatar, u.phonenumber, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, u.is_audit,u.logon_mode, d.dept_name, d.leader from sys_user u
		left join sys_dept d on u.dept_id = d.dept_id
		where u.del_flag = '0'
		<if test="auditState != null  and auditState.size()>0">
			and u.is_audit in
			<foreach collection="auditState" item="s" open="(" close=")" separator=",">
				#{s}
			</foreach>
		</if>
		<if test="phoneNumberOrEmail != null and phoneNumberOrEmail != ''">
			AND (u.phonenumber = #{phoneNumberOrEmail} or u.email = #{phoneNumberOrEmail})
		</if>
	</select>

	<select id="selectAllocatedList" resultMap="SysUserResult">
	    select distinct u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.phonenumber, u.status, u.create_time
	    from sys_user u
			 left join sys_dept d on u.dept_id = d.dept_id
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
	    where u.del_flag = '0' and u.is_audit = '0' and r.role_id = #{roleId}
	    <if test="userName != null and userName != ''">
			AND u.user_name like concat('%', replace(#{userName}::text, '_', '\_'), '%')
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>

		${params.dataScope}
	</select>
	
	<select id="selectUnallocatedList" resultMap="SysUserResult">
	    select distinct u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.phonenumber, u.status, u.create_time
	    from sys_user u
			 left join sys_dept d on u.dept_id = d.dept_id
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
	    where u.del_flag = '0' and u.is_audit = '0' and (r.role_id != #{roleId} or r.role_id IS NULL)
	    and u.user_id not in (select u.user_id from sys_user u inner join sys_user_role ur on u.user_id = ur.user_id and ur.role_id = #{roleId})
	    <if test="userName != null and userName != ''">
			AND u.user_name like concat('%', replace(#{userName}::text, '_', '\_'), '%')
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>

		${params.dataScope}
	</select>
	
	<select id="selectUserByUserName" resultMap="SysUserResult">
	    <include refid="selectUserVo"/>
		where u.user_name = #{userName} and u.del_flag = '0'
	</select>

	<select id="selectUserByUserNameOrEmail" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.del_flag = '0'
		<if test="userName != null">
			and u.user_name = #{userName}
		</if>
		<if test="userId != null">
			and u.user_id != #{userId}
		</if>
		<if test="email != null">
			and u.email = #{email}
		</if>
		<if test="phonenumber != null">
			and u.phonenumber = #{phonenumber}
		</if>
	</select>

	<select id="selectUserByEmail" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.email = #{email} and u.del_flag = '0'
	</select>
	<select id="selectUserByPhonenumber" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.phonenumber = #{phonenumber} and u.del_flag = '0'
	</select>
	<select id="selectUserById"  resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.user_id = #{userId}
	</select>
	
	<select id="checkUserNameUnique" resultType="int">
		select count(1) from sys_user where user_name = #{userName} and del_flag = '0'  limit 1
	</select>
	
	<select id="checkPhoneUnique" resultMap="SysUserResult">
		select user_id, phonenumber from sys_user where phonenumber = #{phonenumber} and del_flag = '0' limit 1
	</select>
	
	<select id="checkEmailUnique" resultMap="SysUserResult">
		select user_id, email from sys_user where email = #{email} and del_flag = '0' limit 1
	</select>
	
	<insert id="insertUser" useGeneratedKeys="true" keyProperty="userId">
 		insert into sys_user(
 			<if test="userId != null and userId != 0">user_id,</if>
 			<if test="deptId != null and deptId != 0">dept_id,</if>
 			<if test="userName != null and userName != ''">user_name,</if>
 			<if test="nickName != null and nickName != ''">nick_name,</if>
 			<if test="email != null and email != ''">email,</if>
 			<if test="avatar != null and avatar != ''">avatar,</if>
 			<if test="phonenumber != null and phonenumber != ''">phonenumber,</if>
 			<if test="sex != null and sex != ''">sex,</if>
 			<if test="password != null and password != ''">password,</if>
 			<if test="status != null and status != ''">status,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			<if test="remark != null and remark != ''">remark,</if>
 			<if test="isAudit != null and isAudit != ''">is_audit,</if>
 			create_time,update_time
 		)values(
 			<if test="userId != null and userId != ''">#{userId},</if>
 			<if test="deptId != null and deptId != ''">#{deptId},</if>
 			<if test="userName != null and userName != ''">#{userName},</if>
 			<if test="nickName != null and nickName != ''">#{nickName},</if>
 			<if test="email != null and email != ''">#{email},</if>
 			<if test="avatar != null and avatar != ''">#{avatar},</if>
 			<if test="phonenumber != null and phonenumber != ''">#{phonenumber},</if>
 			<if test="sex != null and sex != ''">#{sex},</if>
 			<if test="password != null and password != ''">#{password},</if>
 			<if test="status != null and status != ''">#{status},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
			<if test="isAudit != null and isAudit != ''">#{isAudit},</if>
 			now(),now()
 		)
	</insert>
	
	<update id="updateUser">
 		update sys_user
 		<set>
 			<if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
 			<if test="userName != null and userName != ''">user_name = #{userName},</if>
 			<if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
 			<if test="email != null ">email = #{email},</if>
 			<if test="phonenumber != null ">phonenumber = #{phonenumber},</if>
 			<if test="sex != null and sex != ''">sex = #{sex},</if>
 			<if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
 			<if test="password != null and password != ''">password = #{password},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
 			<if test="loginDate != null">login_date = #{loginDate},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			<if test="remark != null">remark = #{remark},</if>
 			update_time = now()
 		</set>
 		where user_id = #{userId}
	</update>
	
	<update id="updateUserStatus">
 		update sys_user set status = #{status} where user_id = #{userId}
	</update>
	
	<update id="updateUserAvatar">
 		update sys_user set avatar = #{avatar} where user_name = #{userName}
	</update>
	
	<update id="resetUserPwd">
 		update sys_user set password = #{password} where user_name = #{userName}
	</update>
	<update id="auditUser">
		update sys_user set is_audit = #{type} , del_flag = #{type}
		where user_id = #{userId}
	</update>

	<delete id="deleteUserById" >
 		update sys_user set del_flag = '2' where user_id = #{userId}
 	</delete>
 	
 	<delete id="deleteUserByIds" >
 		update sys_user set del_flag = '2' where user_id in
 		<foreach collection="array" item="userId" open="(" separator="," close=")">
 			#{userId}
        </foreach> 
 	</delete>


	<resultMap id="notInProjectRM" type="map">
		<result property="userName"     column="user_name"    />
		<result property="nickName"     column="nick_name"    />
		<result property="userId"     column="user_id"    />
	</resultMap>
	<select id="selectUserListNotInProject" resultMap="notInProjectRM" >
		select user_id ,user_name ,nick_name FROM sys_user
		WHERE status = '0' and del_flag='0' and is_audit = '0'
		<if test="ids != null and ids.length>0">
			and user_id not in
			<foreach collection="ids" item="id" open="(" close=")" separator=",">
				#{id}
			</foreach>
		</if>
	</select>

	<select id="selectUserListInProject" resultMap="notInProjectRM" >
		select user_id ,user_name ,nick_name FROM sys_user
		WHERE status = '0' and del_flag='0' and is_audit = '0'
		<choose>
			<when test="ids != null and ids.length>0">
				and user_id in
				<foreach collection="ids" item="id" open="(" close=")" separator=",">
					#{id}
				</foreach>
			</when>
			<otherwise>
				and 1 = 2
			</otherwise>
		</choose>
	</select>

    <select id="selectUserAll" resultMap="notInProjectRM" >
		select user_id ,user_name ,nick_name FROM sys_user
		WHERE status = '0' and del_flag='0' and is_audit = '0'
	</select>

    <select id="listExaminer" resultMap="notInProjectRM">
		select distinct(su.user_id) ,su.user_name ,su.nick_name FROM sys_user su
		left join sys_user_role sur on su.user_id = sur.user_id
		left join sys_role sr on sur.role_id = sr.role_id
		WHERE su.status = '0' and su.del_flag='0' and is_audit = '0'
		and su.user_id != #{userId}
		<choose>
			<when test="roles != null and roles.length>0">
				and sr.role_key in
				<foreach collection="roles" item="role" open="(" close=")" separator=",">
					#{role}
				</foreach>
			</when>
			<otherwise>
				and 1 = 2
			</otherwise>
		</choose>
	</select>
</mapper> 